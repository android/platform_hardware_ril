{
  "comments": [
    {
      "key": {
        "uuid": "9c8801e4_bb73a727",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "Can we avoid these compilation conditionals and come up with generic design for multi sim. Ideal expectation would be the same system.img should be usable for dsds/tsts/qsqs.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c920913_538cc471",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1039969
      },
      "writtenOn": "2014-03-03T20:14:05Z",
      "side": 1,
      "message": "Someone may want to use the macro as an array size. For example, RADIO_STATE[SIM_COUNT].",
      "parentUuid": "9c8801e4_bb73a727",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c7df19f_b8adf517",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-04T02:42:06Z",
      "side": 1,
      "message": "I think The SIM_COUNT would be provided by TelephonyDevController which BRCM is working on.",
      "parentUuid": "5c920913_538cc471",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_50ca6138",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4124,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "Is this interface change required? Can\u0027t we depend on SIM absent available through GET_SIM_STATUS?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_404cc460",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4124,
      "author": {
        "id": 1039969
      },
      "writtenOn": "2014-03-03T20:14:05Z",
      "side": 1,
      "message": "We use the UNSOL message to notify ServiceTracker and setRadioPower can be triggered.",
      "parentUuid": "3c52b523_50ca6138",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_30cfe548",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4134,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "We get SIM PLUG/UNPLUG information from GET_SIM_STATUS why another request required?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_10e4e9c2",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4138,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "As I understand the backward compatibility is being achieved through compile conditional flags. \n\nSuppose there is an android build avialable with ANDROID_MULTI_SIM flag enabled. This build may not be directly working with existing any of the vendor RILs. Vendors need to make a build with ANDROID_MULTI_SIM flag disabled.\n\nThe problem is because the backward compatibility is achieved through compile conditionals.\n\nCan we achieve this backward compatibility through run time mechanism? May be based of RIL version?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c920913_6e523f30",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4138,
      "author": {
        "id": 1039969
      },
      "writtenOn": "2014-03-03T20:14:05Z",
      "side": 1,
      "message": "In the case of several sockets within one RILD, caller have to pass socket id in the API RIL_onUnsolicitedResponse. If we would like to support run time mechanism, we have to have two APIs at the same time. This means vendors who would like to use new RIL have to modify their current vendor-ril. I think build time mechanism is easy and quick to migration for vendors",
      "parentUuid": "3c52b523_10e4e9c2",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c920913_4e097bf8",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4138,
      "author": {
        "id": 1039969
      },
      "writtenOn": "2014-03-03T20:38:09Z",
      "side": 1,
      "message": "But I can check RIL_VERSION in RIL_onUnsolicitedResponse. If callback.RIL_VERSION \u003c RIL_VERSION, then just use RIL_SOCKET_1 directly",
      "parentUuid": "5c920913_6e523f30",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c66ed13_5ed045e5",
        "filename": "include/telephony/ril.h",
        "patchSetId": 3
      },
      "lineNbr": 4138,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-04T02:42:06Z",
      "side": 1,
      "message": "I think you may not need to have version check also, as per my comment in the below file.  (ANDROID_MULTI_SIM compilation conditional to be removed)\n\nhttps://android-review.googlesource.com/#/c/80190/3/rild/rild.c",
      "parentUuid": "5c920913_4e097bf8",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_1ec99268",
        "filename": "libril/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "where this macro DSDA_RILD1 is used?\nWhat is the purpose of this macro, can you please explain?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c8801e4_9be6e396",
        "filename": "libril/ril.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "can we identify socket name \nby SOCKET_NAME_RIL+  instace id/sim id etc.\n\nrather than declaring each socket name to make it generic.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_f0e02db0",
        "filename": "libril/ril.cpp",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "each instance should not have another variable,\n\nThere should be an array of variables and these should be controlled runtime based on current configuration(dsds/tsts).\n\nAlso the memory should be allocated for these variables based on that configuration.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_fec59e4b",
        "filename": "libril/ril.cpp",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "array of variables would be good and memory should be allocated at runtime based on configuration.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_ded2da0f",
        "filename": "libril/ril.cpp",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "This code to be optimized and make it generic.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_83a9b162",
        "filename": "libril/ril.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3529,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "how debug sockets would be handled for 2nd SIM, 3rd SIM?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_b942a027",
        "filename": "libril/ril.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3809,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "How about defining new callback RIL_onUnsolicitedResponseSub() function in ril.h which would be used for multi sim functionality and keeping existing RIL_onUnsolicitedResponse() as it is.\n\nWith this way we may not need to have compile conditional mechanism but still we can achieve backward compatibility?\n\nThe older rils call RIL_onUnsolicitedResponse() and in ril.cpp it can be routed to RIL_onUnsolicitedResponseSub()  to default socket.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_63aeb56a",
        "filename": "reference-ril/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "why includes needs to be changed here?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_23b8bda6",
        "filename": "rild/rild.c",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "How about defining new callback RIL_onUnsolicitedResponseSub() function in ril.h which would be used for multi sim functionality and keeping existing RIL_onUnsolicitedResponse() as it is.\nWith this way we may not need to have compile conditional mechanism but still we can achieve backward compatibility?\nThe older rils call RIL_onUnsolicitedResponse() and in ril.cpp it can be routed to RIL_onUnsolicitedResponseSub() to default socket.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_43b3b9cc",
        "filename": "rild/rild.c",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "Can you please why changes are required here?",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_99e35cf8",
        "filename": "rild/rild.c",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 1025864
      },
      "writtenOn": "2014-03-02T11:45:34Z",
      "side": 1,
      "message": "In case of two rild architecture for DSDS, how the second rild can listen on second sockets (rild2)?\n\nI am not able to trace any code which can handle 2nd RILD and in ril.cpp the second rild listen on rild2 socket.\n\nCan you please point that code.",
      "revId": "af51f160751d3dd39bd01a6aab3fe3507a6781b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}