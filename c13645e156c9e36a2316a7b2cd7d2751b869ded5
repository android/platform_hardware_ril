{
  "comments": [
    {
      "key": {
        "uuid": "e5c1a180_0226c855",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 541,
      "author": {
        "id": 1054648
      },
      "writtenOn": "2017-04-14T17:07:46Z",
      "side": 1,
      "message": "Is this needed? Isn\u0027t there an implicit cast from char* to hidl_string?",
      "range": {
        "startLine": 541,
        "startChar": 47,
        "endLine": 541,
        "endChar": 63
      },
      "revId": "c13645e156c9e36a2316a7b2cd7d2751b869ded5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67d89141_251172a9",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 541,
      "author": {
        "id": 1081638
      },
      "writtenOn": "2017-04-14T17:10:26Z",
      "side": 1,
      "message": "there is, but I want to avoid it and for better documentation so we get reminded this param is actually converted to hidl_string.",
      "parentUuid": "e5c1a180_0226c855",
      "range": {
        "startLine": 541,
        "startChar": 47,
        "endLine": 541,
        "endChar": 63
      },
      "revId": "c13645e156c9e36a2316a7b2cd7d2751b869ded5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff73b0d7_990c400d",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 541,
      "author": {
        "id": 1054648
      },
      "writtenOn": "2017-04-14T17:24:36Z",
      "side": 1,
      "message": "The way hidl_string typecasts are defined, I think this means an additional copy. And if that\u0027s the case we should probably avoid it.",
      "parentUuid": "67d89141_251172a9",
      "range": {
        "startLine": 541,
        "startChar": 47,
        "endLine": 541,
        "endChar": 63
      },
      "revId": "c13645e156c9e36a2316a7b2cd7d2751b869ded5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b61df75c_11aaf52e",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 541,
      "author": {
        "id": 1081638
      },
      "writtenOn": "2017-04-14T17:36:47Z",
      "side": 1,
      "message": "I think before and after change, there are always extra copies.\n\nHere is the function signature of copyHidlStringToRil\nbool copyHidlStringToRil(char **dest, const hidl_string \u0026src, RequestInfo *pRI);\n\nBut before we actually passed in are (char **, const char *, RequestInfo *), so the compiler automatically creates a temp hidl_string for us.\n\nIf we really want to avoid extra copy, we should not allocate another string and directly copy the string pointer to the array of string pointer pStrings we created. I can upload another patch for reference.",
      "parentUuid": "ff73b0d7_990c400d",
      "range": {
        "startLine": 541,
        "startChar": 47,
        "endLine": 541,
        "endChar": 63
      },
      "revId": "c13645e156c9e36a2316a7b2cd7d2751b869ded5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa973eec_b4d6b414",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 541,
      "author": {
        "id": 1054648
      },
      "writtenOn": "2017-04-14T17:40:01Z",
      "side": 1,
      "message": "I am ok with this unless you think the new patch set will be better.",
      "parentUuid": "b61df75c_11aaf52e",
      "range": {
        "startLine": 541,
        "startChar": 47,
        "endLine": 541,
        "endChar": 63
      },
      "revId": "c13645e156c9e36a2316a7b2cd7d2751b869ded5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}