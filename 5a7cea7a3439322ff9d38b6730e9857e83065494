{
  "comments": [
    {
      "key": {
        "uuid": "25387165_ee5421f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1121198
      },
      "writtenOn": "2017-10-12T22:29:23Z",
      "side": 1,
      "message": "Can we add the \"Bug\" tag here too?",
      "revId": "5a7cea7a3439322ff9d38b6730e9857e83065494",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9da4ecf_f983374a",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1121198
      },
      "writtenOn": "2017-10-05T19:37:25Z",
      "side": 1,
      "message": "why do we want to even allocate *dest when len \u003d\u003d0 if we\u0027re not going to strncpy anything into it?",
      "range": {
        "startLine": 490,
        "startChar": 17,
        "endLine": 490,
        "endChar": 21
      },
      "revId": "5a7cea7a3439322ff9d38b6730e9857e83065494",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2f0e1f1_de963777",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1019829
      },
      "writtenOn": "2017-10-06T16:48:36Z",
      "side": 1,
      "message": "We want to send empty string(\"\") to RIL hence allocating one byte which contains one byte \u0027\\0\u0027 of data.\n\n\n\nJust to clarify, below is the requirement:\nCurrently in ril.h interface, there is no way to get the number of remaining attempts during device power-up hence we are defining this approach of sending empty PIN value(\"\") to vendor RIL as part of RIL_REQUEST_ENTER_SIM_PIN, vendor RIL would treat as a special case and sends remaining attempts without attempting to UNLOCK the PIN.",
      "parentUuid": "e9da4ecf_f983374a",
      "range": {
        "startLine": 490,
        "startChar": 17,
        "endLine": 490,
        "endChar": 21
      },
      "revId": "5a7cea7a3439322ff9d38b6730e9857e83065494",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "021a3cdf_12fc5479",
        "filename": "libril/ril_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1121198
      },
      "writtenOn": "2017-10-12T22:29:23Z",
      "side": 1,
      "message": "I see! Maybe we can rewrite the logic flow to match this, something like\n\nsize_t len \u003d src.size();  \nif (len \u003d\u003d 0) {\n    if (pRI-\u003epCI-\u003erequestNumber \u003d\u003d RIL_REQUEST_ENTER_SIM_PIN ||\n            pRI-\u003epCI-\u003erequestNumber \u003d\u003d RIL_REQUEST_ENTER_SIM_PUK ||\n            pRI-\u003epCI-\u003erequestNumber \u003d\u003d RIL_REQUEST_ENTER_SIM_PIN2 ||\n          pRI-\u003epCI-\u003erequestNumber \u003d\u003d RIL_REQUEST_ENTER_SIM_PUK2) {\n        // We respond to these requests even if src is empty\n        // by setting dest to \u0027\\0\u0027.\n        // This enables us to get the remaining unlock attempts\n        // without attempting to unlock the PIN\n        *dest \u003d (char *) calloc(1, sizeof(char));\n    } else {\n       *dest \u003d NULL;\n    }\n    return true;\n}",
      "parentUuid": "f2f0e1f1_de963777",
      "range": {
        "startLine": 490,
        "startChar": 17,
        "endLine": 490,
        "endChar": 21
      },
      "revId": "5a7cea7a3439322ff9d38b6730e9857e83065494",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}